<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	

	<!-- 1. PropertyPlaceholderConfigurer클래스를 이용하여 DB설정 관련 정보가 저장된 jdbc.properties파일의 경로를 저장해 읽어들일 수 있게 설정 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/config/jdbc.properties</value>
				<value>/WEB-INF/config/jdbc/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 2. myBatis프레임워크에서 제공하는 PooledDataSource클래스를 이용하여 커넥션풀 빈 생성 -->
	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 3. myBatis프레임워크에서 제공하는 SqlSessionFactoryBean클래스를 이용하여 빈을 생성하고 위 PooledDataSource 커넥션풀 주입 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	
		<!-- 2번에서 생성한 빈을 참조(ref)하여 sqlSessionFactory빈에 dataSource 변수에 주입 -->
		<property name="dataSource" ref="dataSource" /> 
		
		<!-- SqlSessionFactory빈에 주입하기 위해 mybatis에서 제공하는 modelConfig.xml파일의 클래스 경로를 작성 -->
		<property name="configLocation" value="classpath:mybatis/model/modelConfig.xml" />
		
		<!-- SqlSessionFactory빈에 주입하기 위해 mybatis에서 제공하는 매퍼패키지 내부에 존재하는 모든 xml파일들을 불러오는 경로 작성 -->
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" />
		
	</bean>
	
	<!-- 4. mybatis-spring 프레임워크에서 제공하는 SqlSessionTemplate클래스를 이용하여 빈 생성 설정 및 SqlSessionFactoryBean을 템플릿의 변수에 주입 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	
</beans>