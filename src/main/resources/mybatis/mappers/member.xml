<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- DAO에서 아래 mapper태그 내부에 접근하기 위해 mapper태그에 namespace를 설정 -->
  <!-- DAO에서 member관련 sql문을 작성 또는 호출을 위해서는 mapper.member를 호출하여야 함 -->
<mapper namespace="mapper.member">
	<!-- member관련 DB에서 조회해온 결과를 담을 Map을 생성하여 id값을 memResult로 저장 -->
	<!-- 이후 조회해온 resultMap에 VO들을 담기 위해서  resultMap에 memResult를 작성하거나
		 resultType에 memberVO를 작성하여 VO빈에 저장하면 됨  -->
	<resultMap id="memResult" type="memberVO">
		<!-- result값을 저장하기 위한 속성명으로 id를 제공하고 
			 id속성명에 DB에서 조회해온 컬럼명이 id인 값들을 저장하기 위해 설정 -->
		<result property="id" column="id"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="ssn" column="ssn"/>
		<result property="nickname" column="nickname"/>
		<result property="email" column="email"/>
		<result property="addr1" column="addr1"/>
		<result property="addr2" column="addr2"/>
		<result property="addr3" column="addr3"/>
		<result property="addr4" column="addr4"/>
		<result property="fileName" column="fileName"/>
		
	</resultMap>
	
	<!-- member라는 테이블에 존재하는 모든 회원들을 조회해화 리스트에 저장하기 위해 위 resultMap에 설정해둔 id값 memResult를 호출하여
		 조회해온 모든 회원들의 정보를 memResult라는 List에 저장 -->
	<select id="selectAllMemberList" resultMap="memResult">
		<![CDATA[
			select * from member
		]]>		
	</select>
	
	<!-- 회원정보를 등록하기 위해 받아온 매개변수 타입이 memberVO이기 때문에 아래의 parameterType속성 값으로
		  매개변수로 지정했던 memberVO값을 설정 -->
	<insert id="insertMember" parameterType="java.util.HashMap">
		<!-- memberVO에 저장된 변수명들을 작성하기 위해서는 #{VO에 저장된 변수명}으로 작성 -->
		<!-- update문이나 delete문도 동일하게 작성하면 됨 -->
		<![CDATA[
			insert into member(id, password, name, ssn, nickname, email, addr1, addr2, addr3, addr4, fileName)
			values (#{id}, #{password}, #{name}, #{ssn}, #{nickname}, #{email}, #{addr1}, #{addr2}, #{addr3}, #{addr4}, #{fileName})
		]]>
	</insert>
	
	<!-- 로그인창에서 입력한 ID와 비밀번호로 회원정보를 조회하는 SQL문  -->
	<select id="loginById" parameterType="java.util.Map" resultType="memberVO">
		<![CDATA[
			select * from member where id = #{id} and password = #{password} 
		]]>
	</select>
	
   <!--  parameterType속성에는 값으로 MemberDAO파일에서 selectOne메소드 호출시 전달되는 값의 타입을 적어준다 -->
   <!--  resultType속성에는 값으로 조회된 한행(레코드)를 MembeVO객체의 각변수에 저장하기 위해  memberVO별칭을 적어준다 -->	
  	<select id="selectMemberById" parameterType="memberVO" resultType="memberVO">
  		<![CDATA[
  			select * from member where id = #{id}
  		]]>
  	</select>
	
	<!-- 업데이트멤버바이아이디 -->
	<select id="updateMember" parameterType="java.util.HashMap" resultType="memberVO">
  		<![CDATA[
  			UPDATE member
			SET 
  		]]>
  		<if test="password != null">
  			<![CDATA[
  				password = #{password},
  			]]>
  		</if>
  		<![CDATA[
	  			name = #{name},
			    ssn = #{ssn},
			    nickname = #{nickname},
			    email = #{email},
			    addr1 = #{addr1},
			    addr2 = #{addr2},
			    addr3 = #{addr3},
			    addr4 = #{addr4},
			    fileName = #{fileName}
			WHERE id = #{id} 
  		]]>
  	</select>

	<select id="getMemberInfo" resultType="memberVO" parameterType="int">
		<![CDATA[
			SELECT * FROM member WHERE nickname = (
			    SELECT nickname FROM trade WHERE no=#{no}
			)
		]]>
	</select>
	
	<select id="getMemberId" resultType="memberVO" parameterType="String">
		<![CDATA[
			SELECT * FROM member WHERE nickname = #{nickname}
		]]>
	</select>

	
	<select id="selectMember" resultType="memberVO" parameterType="String">
		<![CDATA[
			SELECT * FROM member WHERE id = #{id}
		]]>
	</select>
	
	<select id="kakaoLogin" resultType="memberVO" parameterType="memberVO">
		<![CDATA[
			SELECT * FROM member WHERE id = #{id}
		]]>
	</select>
	
	<insert id="insertKakaoMember" parameterType="java.util.HashMap">
		<!-- memberVO에 저장된 변수명들을 작성하기 위해서는 #{VO에 저장된 변수명}으로 작성 -->
		<!-- update문이나 delete문도 동일하게 작성하면 됨 -->
		<![CDATA[
			insert into member(id, password, name, ssn, nickname, email, addr1, addr2, addr3, addr4, fileName)
			values (#{id}, #{password}, #{name}, #{ssn}, #{nickname}, #{email}, #{addr1}, #{addr2}, #{addr3}, #{addr4}, #{fileName})
		]]>
	</insert>
	
	<select id="likelistByNick" parameterType="memberVO" resultType="likeboardVO">
  		<![CDATA[
  			select t.no,l.nickname, t.title   from likes l, trade t
        	where l.tradeno = t.no and l.nickname= #{nickname}
  		]]>
  	</select>

	<select id="CheckById" parameterType="String" resultType="int">
  		<![CDATA[
  				select * from member where id = #{id}
  		]]>
  	</select>

</mapper>
